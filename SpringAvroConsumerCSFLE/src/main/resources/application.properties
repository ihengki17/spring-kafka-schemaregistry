# Kafka
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.bootstrap.servers=<bootstrap-server>
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule   required username='<api key>'   password='<api secret>';
spring.kafka.properties.security.protocol=SASL_SSL

# Confluent Cloud Schema Registry
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.basic.auth.user.info=<schema registry api key>:<schema registry api secret>
spring.kafka.properties.schema.registry.url=<schema registry endpoint>
spring.kafka.client-id=kopi-acung

# encryption
spring.kafka.properties.rule.executors._default_.param.account.type=service_account
spring.kafka.properties.rule.executors._default_.param.client.id=<GCP Client ID>
spring.kafka.properties.rule.executors._default_.param.client.email=<GCP service account email>
spring.kafka.properties.rule.executors._default_.param.private.key.id=<GCP Private Key ID>
spring.kafka.properties.rule.executors._default_.param.private.key=<GCP private key>
spring.kafka.properties.use.latest.version=true
spring.kafka.properties.auto.register.schemas=false

# Consumer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=kopi-acung
spring.kafka.consumer.properties.specific.avro.reader=true
spring.kafka.consumer.spring.kafka.consumer.deserializeValueOnError=true

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.main.web-application-type=none

